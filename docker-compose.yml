version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./etc/nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app_network
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: .
      dockerfile: Laravel.Dockerfile
    container_name: backend_app
    expose:
      - "8000"
    volumes:
      - ./backend:/var/www/backend
    working_dir: /var/www/backend
    environment:
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/backend/database/database.sqlite
    networks:
      - app_network
    command: php artisan serve --host=0.0.0.0 --port=8000

  frontend:
    build:
      context: .
      dockerfile: Angular.Dockerfile
      target: dev
      args:
        - BUILDPLATFORM=linux/amd64
        - TARGETPLATFORM=linux/amd64
    container_name: frontend_app
    expose:
      - "4200"
    volumes:
      - ./frontend:/project/webapp
      - /project/webapp/node_modules
      - node_modules_cache:/opt/node/node_modules
    working_dir: /project/webapp
    networks:
      - app_network
    environment:
      - NODE_ENV=development
      - NG_CLI_ANALYTICS=false
    command: sh -c "ln -sf /opt/node/node_modules /project/webapp/node_modules && ng serve --host 0.0.0.0 --port 4200 --poll 2000"

networks:
  app_network:
    driver: bridge

volumes:
  node_modules_cache:
